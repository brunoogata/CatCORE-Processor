// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/30/2018 17:25:10"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          normips
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module normips_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK;
// wires                                               
wire [31:0] ENDERECO_INSTRUCAO_TEST;
wire [31:0] INSTRUCAO_TEST;
wire [31:0] RESULTADO_ALU_TEST;
wire [31:0] SAIDA_D1_TEST;
wire [31:0] SAIDA_D2_TEST;
wire [31:0] SAIDA_MEMDADOS_TEST;
wire [31:0] SAIDA_MUX2_TEST;
wire [31:0] SAIDA_MUX3_TEST;
wire [31:0] SAIDA_MUX4_TEST;
wire [31:0] SAIDA_MUXN_TEST;

// assign statements (if any)                          
normips i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK(CLOCK),
	.ENDERECO_INSTRUCAO_TEST(ENDERECO_INSTRUCAO_TEST),
	.INSTRUCAO_TEST(INSTRUCAO_TEST),
	.RESULTADO_ALU_TEST(RESULTADO_ALU_TEST),
	.SAIDA_D1_TEST(SAIDA_D1_TEST),
	.SAIDA_D2_TEST(SAIDA_D2_TEST),
	.SAIDA_MEMDADOS_TEST(SAIDA_MEMDADOS_TEST),
	.SAIDA_MUX2_TEST(SAIDA_MUX2_TEST),
	.SAIDA_MUX3_TEST(SAIDA_MUX3_TEST),
	.SAIDA_MUX4_TEST(SAIDA_MUX4_TEST),
	.SAIDA_MUXN_TEST(SAIDA_MUXN_TEST)
);
initial 
begin 
#1000000 $finish;
end 

// CLOCK
always
begin
	CLOCK = 1'b0;
	CLOCK = #50000 1'b1;
	#50000;
end 
endmodule

